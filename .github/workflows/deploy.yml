name: deploy

on:
  workflow_dispatch:
    inputs:
      cluster:
        description: 'Current cluster to deploy'
        required: true
        default: 'my-gke-cluster'
      tag:
        description: 'Current tag version'
        default: 'latest'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ github.event.inputs.cluster }}
  GKE_ZONE: us-central1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: gke-test # TODO: update to deployment name
  IMAGE_TAG: ${{ github.event.inputs.tag }}
  IMAGE: api-hello
  REGISTRY: gcr.io

jobs:
  setup-deploy:
    name: Setup and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: us-central1-a
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Set up helm
    - name: Set up Helm
      run: |-
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        git clone https://github.com/automate-cloud-poc/api-helm.git
        helm upgrade --install --wait --set image.tag=$IMAGE_TAG --set image.repository=gcr.io/$PROJECT_ID/$IMAGE $IMAGE ./api-helm -f .scripts/deploy.yaml
#        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
#        ./kustomize build . | kubectl apply -f -
#        kubectl rollout status deployment/$DEPLOYMENT_NAME
#        kubectl get services -o wide
